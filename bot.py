import logging
import random
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from datetime import datetime, timedelta


API_TOKEN = '7952778498:AAFSY_hV_e_47AmMqdEU7WDs6WFyiIL_C0o'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
users_data = {}

# –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ª–æ–ø–∞—Ç
shovels_info = {
    "–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞": {
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": "–ü—Ä–æ—Å—Ç–∞—è –ª–æ–ø–∞—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –¥–æ 10 –º–æ—Ä–∫–æ–≤–æ–∫ –∑–∞ —Ä–∞–∑."
    },
    "–ö–∞–º–µ–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞": {
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": "–ù–µ–º–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞, —Å–æ–±–∏—Ä–∞–µ—Ç –æ—Ç 5 –¥–æ 15 –º–æ—Ä–∫–æ–≤–æ–∫."
    },
    "–ñ–µ–ª–µ–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞": {
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": "–°–∏–ª—å–Ω–∞—è –ª–æ–ø–∞—Ç–∞, —Å–æ–±–µ—Ä–µ—Ç –æ—Ç 10 –¥–æ 25 –º–æ—Ä–∫–æ–≤–æ–∫."
    },
    "–ê–ª–º–∞–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞": {
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": "–û—á–µ–Ω—å –º–æ—â–Ω–∞—è –ª–æ–ø–∞—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–±–µ—Ä–µ—Ç –æ—Ç 20 –¥–æ 50 –º–æ—Ä–∫–æ–≤–æ–∫."
    },
    "–ó–æ–ª–æ—Ç–∞—è –ª–æ–ø–∞—Ç–∞": {
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞": "–°–∞–º–∞—è –ª—É—á—à–∞—è –ª–æ–ø–∞—Ç–∞, —Å–æ–±–µ—Ä–µ—Ç –æ—Ç 30 –¥–æ 70 –º–æ—Ä–∫–æ–≤–æ–∫."
    }
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —Ñ–µ—Ä–º–µ—Ä! üåæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É –ø–æ —Ñ–∞—Ä–º—É –º–æ—Ä–∫–æ–≤–æ–∫! ü•ï –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
                         "/farm ‚Äî –Ω–∞—á–∞—Ç—å —Ñ–∞—Ä–º–∏—Ç—å –º–æ—Ä–∫–æ–≤–∫–∏!\n"
                         "/inventory ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å !\n"
                         "/shop ‚Äî –º–∞–≥–∞–∑–∏–Ω —É–ª—É—á—à–µ–Ω–∏–π!\n"
                         "–ì–æ—Ç–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é? –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /farm!", reply_markup=types.ReplyKeyboardRemove())

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await send_welcome(message)

# –î–ª—è –∫–æ–º–∞–Ω–¥—ã /farm
@dp.message(Command("farm"))
async def cmd_farm(message: types.Message):
    user_id = message.from_user.id
    current_time = datetime.now()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    if user_id not in users_data:
        users_data[user_id] = {
            "last_farmed": datetime.min,  # –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞—Ä–º, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            "shovel": 1,  # —É—Ä–æ–≤–µ–Ω—å –ª–æ–ø–∞—Ç—ã (–¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è)
            "carrots": 0  # –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ—Ä–∫–æ–≤–æ–∫
        }

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ñ–∞—Ä–º–∏–ª
    last_farmed = users_data[user_id]["last_farmed"]
    time_diff = current_time - last_farmed
    if time_diff < timedelta(hours=1):
        remaining_time = timedelta(hours=1) - time_diff
        await message.answer(f"–ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {remaining_time.seconds // 60} –º–∏–Ω—É—Ç(—ã), —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–∫–æ–ø–∞—Ç—å –º–æ—Ä–∫–æ–≤–∫–∏!")
        return

    # –¢–∏–ø –ª–æ–ø–∞—Ç—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ—Ä–∫–æ–≤–æ–∫
    shovel_level = users_data[user_id]["shovel"]
    if shovel_level == 1:
        # –î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞ (1-10 –º–æ—Ä–∫–æ–≤–æ–∫)
        carrots = random.randint(1, 10)
    elif shovel_level == 2:
        # –ö–∞–º–µ–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞ (5-15 –º–æ—Ä–∫–æ–≤–æ–∫)
        carrots = random.randint(5, 15)
    elif shovel_level == 3:
        # –ñ–µ–ª–µ–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞ (10-25 –º–æ—Ä–∫–æ–≤–æ–∫)
        carrots = random.randint(10, 25)
    elif shovel_level == 4:
        # –ê–ª–º–∞–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞ (20-50 –º–æ—Ä–∫–æ–≤–æ–∫)
        carrots = random.randint(20, 50)
    elif shovel_level == 5:
        # –ó–æ–ª–æ—Ç–∞—è –ª–æ–ø–∞—Ç–∞ (30-70 –º–æ—Ä–∫–æ–≤–æ–∫)
        carrots = random.randint(30, 70)
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –ª–æ–ø–∞—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞)
        carrots = 0

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ—Ä–∫–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users_data[user_id]["carrots"] += carrots

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∞—Ä–º–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
    users_data[user_id]["last_farmed"] = current_time

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ñ–∞—Ä–º–∞
    await message.answer(f"–¢—ã –≤—ã–∫–æ–ø–∞–ª(–∞) {carrots} –º–æ—Ä–∫–æ–≤–æ–∫! ü•ï\n"
                         f"–£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å {users_data[user_id]['carrots']} –º–æ—Ä–∫–æ–≤–æ–∫. üåæ\n"
                         "–¢–µ–ø–µ—Ä—å –ø–æ–¥–æ–∂–¥–∏ —á–∞—Å, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ —Ñ–∞—Ä–º–∏—Ç—å.")


# –ö–æ–º–∞–Ω–¥–∞ /inventory
@dp.message(Command("inventory"))
async def cmd_inventory(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞–Ω–Ω—ã–µ
    if user_id not in users_data:
        await message.answer("–¢—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª —Ñ–∞—Ä–º–∏—Ç—å –º–æ—Ä–∫–æ–≤–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /farm, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    carrots = users_data[user_id]["carrots"]
    shovel_level = users_data[user_id]["shovel"]
    shovel_name = list(shovels_info.keys())[shovel_level - 1]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    await message.answer(f"–¢–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n"
                         f"–ú–æ—Ä–∫–æ–≤–∫–∏: {carrots} ü•ï\n"
                         f"–õ–æ–ø–∞—Ç–∞: {shovel_name} - {shovels_info[shovel_name]['—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞']}")


from aiogram import types

# –ö–æ–º–∞–Ω–¥–∞ /shop
@dp.message(Command("shop"))
async def cmd_shop(message: types.Message):
    user_id = message.from_user.id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    if user_id not in users_data:
        users_data[user_id] = {
            "carrots": 0,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ—Ä–∫–æ–≤–æ–∫
            "shovel": 1    # –î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        }

    user_data = users_data[user_id]

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–ª–∞–Ω—Å–µ
    await message.answer(f"–£ –≤–∞—Å {user_data['carrots']} –º–æ—Ä–∫–æ–≤–æ–∫. üí∞\n"
                         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω! üõí –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Å–≤–æ–µ–π —Ñ–µ—Ä–º—ã.\n"
                         "–ö–∞–∂–¥–∞—è –ª–æ–ø–∞—Ç–∞ —É–ª—É—á—à–∞–µ—Ç –≤–∞—à—É —Ñ–µ—Ä–º—É, –ø–æ–∑–≤–æ–ª—è—è —Å–æ–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –º–æ—Ä–∫–æ–≤–æ–∫ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑.\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–æ–ø–∞—Ç—ã, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!\n")

    # –ü–µ—Ä–µ—á–µ–Ω—å —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏—Ö —Ü–µ–Ω–∞–º–∏
    shovel_list = {
        "1": {"name": "–ö–∞–º–µ–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞üôÑ", "price": 15},
        "2": {"name": "–ñ–µ–ª–µ–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞ü§ó", "price": 30},
        "3": {"name": "–ê–ª–º–∞–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞üò≤", "price": 50},
        "4": {"name": "–ó–æ–ª–æ—Ç–∞—è –ª–æ–ø–∞—Ç–∞üòé", "price": 100},
        "5": {"name": "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–ø–∞—Ç–∞üòç", "price": 200}
    }

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏
    for shovel_key, shovel_info in shovel_list.items():
        await message.answer(f"{shovel_key}. {shovel_info['name']} - {shovel_info['price']} –º–æ—Ä–∫–æ–≤–æ–∫")

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä—ã –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ—Å—Ç–∏
    await message.answer("–ü–∏—à–∏ –Ω–æ–º–µ—Ä –ª–æ–ø–∞—Ç—ã, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –µ–µ. ‚ú®")
    await message.answer_sticker("CAACAgEAAxkBAAEBu5pgRWNATOSwU8ON4yzfgA-EzXaUto2AfwAC0gADoUjL6dQpEwIbH3qOGWdzZTl6g8v66K9r2HbhY_eGS7F_hQ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏
@dp.message()
async def handle_purchase(message: types.Message):
    user_id = message.from_user.id
    user_data = users_data.get(user_id)

    if not user_data:
        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –≤—ã—Ö–æ–¥–∏–º

    # –ü–µ—Ä–µ—á–µ–Ω—å —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏—Ö —Ü–µ–Ω–∞–º–∏
    shovel_list = {
        "1": {"name": "–ö–∞–º–µ–Ω–Ω–∞—è –ª–æ–ø–∞—Ç–∞", "price": 15},
        "2": {"name": "–ñ–µ–ª–µ–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞", "price": 30},
        "3": {"name": "–ê–ª–º–∞–∑–Ω–∞—è –ª–æ–ø–∞—Ç–∞", "price": 50},
        "4": {"name": "–ó–æ–ª–æ—Ç–∞—è –ª–æ–ø–∞—Ç–∞", "price": 100},
        "5": {"name": "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–ø–∞—Ç–∞", "price": 200}
    }

    shovel_number = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ª–æ–ø–∞—Ç—ã
    if shovel_number not in shovel_list:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–æ–ø–∞—Ç—ã, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å. üòÖ")
        return

    shovel_info = shovel_list[shovel_number]
    price = shovel_info['price']

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –º–æ—Ä–∫–æ–≤–æ–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
    if user_data['carrots'] < price:
        await message.answer(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ—Ä–∫–æ–≤–æ–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ {shovel_info['name']}! üòû")
        return

    # –ü—Ä–æ–≤–æ–¥–∏–º –ø–æ–∫—É–ø–∫—É
    user_data['carrots'] -= price
    user_data['shovel'] = int(shovel_number)  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–ø–∞—Ç—É

    await message.answer(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∫—É–ø–∏–ª–∏ {shovel_info['name']}! üéâ\n"
                         f"–¢–µ–ø–µ—Ä—å —É –≤–∞—Å {user_data['carrots']} –º–æ—Ä–∫–æ–≤–æ–∫ –∏ {shovel_info['name']} –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.")



    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏
    for shovel_key, shovel_info in shovel_list.items():
        await message.answer(f"{shovel_key}. {shovel_info['name']} - {shovel_info['price']} –º–æ—Ä–∫–æ–≤–æ–∫")

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä—ã –¥–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ—Å—Ç–∏
    await message.answer("–ü–∏—à–∏ –Ω–æ–º–µ—Ä –ª–æ–ø–∞—Ç—ã, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –µ–µ. ‚ú®")
    await message.answer_sticker("CAACAgEAAxkBAAEBu5pgRWNATOSwU8ON4yzfgA-EzXaUto2AfwAC0gADoUjL6dQpEwIbH3qOGWdzZTl6g8v66K9r2HbhY_eGS7F_hQ")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
